#!/bin/bash

# üöÄ Script de Demonstra√ß√£o - Sistema de Relat√≥rios Telegram
# Rei do √ìleo - Telegram Bot Reports

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Fun√ß√µes de log
log() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

step() {
    echo -e "${PURPLE}[STEP]${NC} $1"
}

# Verificar se estamos no diret√≥rio correto
if [ ! -f "artisan" ]; then
    error "Este script deve ser executado no diret√≥rio backend do Laravel"
    exit 1
fi

echo -e "${CYAN}"
echo "ü§ñ ==========================================="
echo "   Sistema de Relat√≥rios Telegram - Demo"
echo "   Rei do √ìleo"
echo "=============================================="
echo -e "${NC}"

# 1. Verificar configura√ß√£o
step "1. Verificando configura√ß√£o do Telegram..."

if ! grep -q "TELEGRAM_ENABLED=true" .env 2>/dev/null; then
    warn "Telegram n√£o est√° habilitado no .env"
    log "Adicionando configura√ß√£o b√°sica..."
    echo "" >> .env
    echo "# Telegram Configuration" >> .env
    echo "TELEGRAM_ENABLED=true" >> .env
    echo "TELEGRAM_BOT_TOKEN=your_bot_token_here" >> .env
    echo "TELEGRAM_RECIPIENTS=123456789,987654321" >> .env
    success "Configura√ß√£o b√°sica adicionada ao .env"
else
    success "Telegram j√° est√° configurado"
fi

# 2. Verificar se os comandos est√£o dispon√≠veis
step "2. Verificando comandos Artisan..."

if php artisan list | grep -q "telegram:bot-setup"; then
    success "Comando telegram:bot-setup dispon√≠vel"
else
    error "Comando telegram:bot-setup n√£o encontrado"
    log "Verificando se os arquivos foram criados..."
    ls -la app/Console/Commands/ | grep -i telegram || error "Arquivos de comando n√£o encontrados"
    exit 1
fi

if php artisan list | grep -q "telegram:report"; then
    success "Comando telegram:report dispon√≠vel"
else
    error "Comando telegram:report n√£o encontrado"
    exit 1
fi

if php artisan list | grep -q "telegram:debug"; then
    success "Comando telegram:debug dispon√≠vel"
else
    error "Comando telegram:debug n√£o encontrado"
    exit 1
fi

# 3. Verificar servi√ßos
step "3. Verificando servi√ßos..."

if [ -f "app/Services/TelegramBotService.php" ]; then
    success "TelegramBotService encontrado"
else
    error "TelegramBotService n√£o encontrado"
    exit 1
fi

if [ -f "app/Http/Controllers/Api/TelegramWebhookController.php" ]; then
    success "TelegramWebhookController encontrado"
else
    error "TelegramWebhookController n√£o encontrado"
    exit 1
fi

# 4. Verificar rotas
step "4. Verificando rotas da API..."

if grep -q "telegram" routes/api.php; then
    success "Rotas do Telegram configuradas"
    log "Rotas encontradas:"
    grep -n "telegram" routes/api.php | sed 's/^/  /'
else
    error "Rotas do Telegram n√£o encontradas"
    exit 1
fi

# 5. Testar funcionalidade (modo simulado)
step "5. Testando funcionalidade (modo simulado)..."

log "Testando relat√≥rio geral..."
if php artisan telegram:report general --test; then
    success "Relat√≥rio geral funcionando"
else
    error "Falha no relat√≥rio geral"
fi

log "Testando relat√≥rio de servi√ßos..."
if php artisan telegram:report services --period=week --test; then
    success "Relat√≥rio de servi√ßos funcionando"
else
    error "Falha no relat√≥rio de servi√ßos"
fi

log "Testando relat√≥rio de produtos..."
if php artisan telegram:report products --test; then
    success "Relat√≥rio de produtos funcionando"
else
    error "Falha no relat√≥rio de produtos"
fi

log "Testando dashboard..."
if php artisan telegram:report dashboard --test; then
    success "Dashboard funcionando"
else
    error "Falha no dashboard"
fi

# 6. Mostrar comandos dispon√≠veis
step "6. Comandos dispon√≠veis para uso:"

echo -e "${CYAN}"
echo "üì± Comandos do Bot (no Telegram):"
echo "  /help          - Ajuda"
echo "  /report        - Relat√≥rio geral"
echo "  /report hoje   - Relat√≥rio de hoje"
echo "  /report semana - Relat√≥rio da semana"
echo "  /services      - Status dos servi√ßos"
echo "  /products      - Status do estoque"
echo "  /dashboard     - Dashboard geral"
echo "  /status        - Status do sistema"
echo ""
echo "üõ†Ô∏è Comandos CLI (no terminal):"
echo "  php artisan telegram:bot-setup --set-webhook --webhook-url=https://yourdomain.com/api/telegram/webhook"
echo "  php artisan telegram:bot-setup --get-info"
echo "  php artisan telegram:bot-setup --test"
echo "  php artisan telegram:report general --test"
echo "  php artisan telegram:report services --period=week --test"
echo "  php artisan telegram:debug --get-updates"
echo ""
echo "üîó Endpoints da API:"
echo "  POST /api/telegram/webhook"
echo "  POST /api/telegram/set-webhook"
echo "  GET  /api/telegram/webhook-info"
echo "  DELETE /api/telegram/webhook"
echo "  POST /api/telegram/test"
echo -e "${NC}"

# 7. Instru√ß√µes de configura√ß√£o
step "7. Pr√≥ximos passos para configura√ß√£o:"

echo -e "${YELLOW}"
echo "Para configurar o bot para uso real:"
echo ""
echo "1. Criar bot no Telegram:"
echo "   - Acesse @BotFather no Telegram"
echo "   - Envie /newbot"
echo "   - Siga as instru√ß√µes"
echo "   - Copie o token gerado"
echo ""
echo "2. Configurar vari√°veis de ambiente:"
echo "   - Edite o arquivo .env"
echo "   - Substitua TELEGRAM_BOT_TOKEN pelo token real"
echo "   - Configure TELEGRAM_RECIPIENTS com os chat IDs"
echo ""
echo "3. Obter chat IDs:"
echo "   - Inicie conversa com o bot"
echo "   - Envie uma mensagem"
echo "   - Execute: php artisan telegram:debug --get-updates"
echo "   - Copie os chat_id e configure no .env"
echo ""
echo "4. Configurar webhook:"
echo "   - Execute: php artisan telegram:bot-setup --set-webhook --webhook-url=https://yourdomain.com/api/telegram/webhook"
echo ""
echo "5. Testar:"
echo "   - Execute: php artisan telegram:bot-setup --test"
echo "   - Envie comandos no Telegram"
echo -e "${NC}"

# 8. Verificar documenta√ß√£o
step "8. Verificando documenta√ß√£o..."

if [ -f "docs/TELEGRAM_BOT_REPORTS.md" ]; then
    success "Documenta√ß√£o principal encontrada"
else
    warn "Documenta√ß√£o principal n√£o encontrada"
fi

if [ -f "docs/TELEGRAM_BOT_EXAMPLE.md" ]; then
    success "Exemplos pr√°ticos encontrados"
else
    warn "Exemplos pr√°ticos n√£o encontrados"
fi

if [ -f "docs/TELEGRAM_BOT_IMPLEMENTATION_SUMMARY.md" ]; then
    success "Resumo da implementa√ß√£o encontrado"
else
    warn "Resumo da implementa√ß√£o n√£o encontrado"
fi

echo -e "${GREEN}"
echo "‚úÖ ==========================================="
echo "   Demo conclu√≠do com sucesso!"
echo "   Sistema de Relat√≥rios Telegram est√° pronto"
echo "=============================================="
echo -e "${NC}"

echo -e "${CYAN}"
echo "üìñ Para mais informa√ß√µes, consulte:"
echo "   - docs/TELEGRAM_BOT_REPORTS.md"
echo "   - docs/TELEGRAM_BOT_EXAMPLE.md"
echo "   - docs/TELEGRAM_BOT_IMPLEMENTATION_SUMMARY.md"
echo -e "${NC}"

success "Sistema implementado e testado com sucesso!"
