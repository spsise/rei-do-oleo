version: '3.8'

services:
  # Backend Laravel
  backend:
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.backend
    volumes:
      - ./backend:/var/www/html
      - backend-storage:/var/www/html/storage
    environment:
      - DB_HOST=mysql
      - DB_DATABASE=reidooleo_dev
      - DB_USERNAME=reidooleo
      - DB_PASSWORD=reidooleo123
      - REDIS_HOST=redis
      - MAIL_HOST=mailhog
      - MAIL_PORT=1025
    depends_on:
      - mysql
      - redis
    networks:
      - reidooleo

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/Dockerfile.frontend
    volumes:
      - ./frontend:/app
      - frontend-modules:/app/node_modules
    environment:
      - VITE_API_URL=http://backend:8000
    depends_on:
      - backend
    networks:
      - reidooleo

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/sites:/etc/nginx/sites-available
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - ./backend/public:/var/www/html/public
      - ./frontend/dist:/var/www/frontend
    depends_on:
      - backend
      - frontend
    networks:
      - reidooleo

  # MySQL Database
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: reidooleo_dev
      MYSQL_USER: reidooleo
      MYSQL_PASSWORD: reidooleo123
      MYSQL_ROOT_PASSWORD: root123
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - reidooleo
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot123"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - reidooleo
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  # MailHog (Desenvolvimento)
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - reidooleo

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: reidooleo
      MINIO_ROOT_PASSWORD: reidooleo123
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - reidooleo
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Laravel Queue Worker
  queue:
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.backend
    command: php artisan queue:work --verbose --tries=3 --timeout=90
    volumes:
      - ./backend:/var/www/html
    environment:
      - DB_HOST=mysql
      - DB_DATABASE=reidooleo_dev
      - DB_USERNAME=reidooleo
      - DB_PASSWORD=reidooleo123
      - REDIS_HOST=redis
    depends_on:
      - mysql
      - redis
    networks:
      - reidooleo
    restart: unless-stopped

  # Laravel Scheduler
  scheduler:
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.backend
    command: php artisan schedule:work
    volumes:
      - ./backend:/var/www/html
    environment:
      - DB_HOST=mysql
      - DB_DATABASE=reidooleo_dev
      - DB_USERNAME=reidooleo
      - DB_PASSWORD=reidooleo123
      - REDIS_HOST=redis
    depends_on:
      - mysql
      - redis
    networks:
      - reidooleo
    restart: unless-stopped

volumes:
  mysql-data:
  redis-data:
  minio-data:
  backend-storage:
  frontend-modules:

networks:
  reidooleo:
    driver: bridge 